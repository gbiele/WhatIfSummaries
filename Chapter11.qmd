---
title: "Chapter 11: Why model"
format:
  revealjs:
    embed-resources: true
---

## Data cannot speak for themselves 

- causal effects are calculated as differences between conditional means for treatment levels
- if the number of treatment levels is limited (dichotomous or categorical treatments) conditional means can be calculated without model directly from the data
- if the number treatment levels is high direct calculations are impossible
- in then we can use statistical models, which incorporate assumptions about the **type of relationship** between treatment level and outcome
- we also need models when the treatment is binary, but stratification or adjustment variables are continuous or higher dimensional ^[Treatment and control group will e.g. not have pairs with matching sex, height, and weight]

## Parametric estimators of the conditional mean

1. Assumption about the functional form (e.g. linear)
2. Parameters govern the "expression" of the functional form
  
```{r}
#| fig-align: center
set.seed(125)
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
N = 25
x = rnorm(N)
y = 1.1 + x + rnorm(N)
plot(x,y,bty = "l", cex.lab = 1.5, cex.axis = 1.5)
m = lm(y~x)
abline(m)
arrows(x0 = x, x1 = x, y0 = predict(m), col = "grey",
       y = predict(m)+residuals(m), length = 0)
points(x,y, pch = 16)
txt = paste0("y = ", round(coef(m)[1],1), " + ", round(coef(m)[2],1),"y")
text(min(x),3,txt,pos = 4, cex = 2)
```

## Nonparametric estimators of the conditional mean

- Nonparametric models do not assume a functional form 
  - each conditional mean has its own "parameter"

```{r}
#| fig-align: center
par (mar=c(3,3,2,1), mgp=c(2,.7,0), tck=-.01)
n_levels = 7
set.seed(122)
x = rep((1:n_levels),5)
y = sqrt(x) + rnorm(length(x))

df = data.frame(y = y, x = x, x.f = factor(x)) 
m.o = lm(y~poly(x,2), data = df)
p.o = predict(m.o, newdata = data.frame(x = 1:n_levels), level = .05, interval = "prediction")
m.f = lm(y~x.f, data = df)
p.f = predict(m.f, newdata = data.frame(x.f = factor(1:n_levels)), level = .05, interval = "prediction")
plot(x,y, pch = 16,cex.lab = 1.5, cex.axis = 1.5)
points(-.05+1:n_levels,p.o[,1], col = "red",pch = 16, cex = 2)
points(.05+1:n_levels,p.f[,1], col = "blue",pch = 16, cex = 2)
#arrows(x0 = -.05+1:n_levels, x1 = -.05+1:n_levels, y0 = p.o[,2], y1 = p.o[,3], col = "red", length = 0)
#arrows(x0 = .05+1:n_levels, x1 = .05+1:n_levels, y0 = p.f[,2], y1 = p.f[,3], col = "blue", length = 0)
```

## Smoothing

- Simple linear regression and non-parametric models are extremes on a continuum
  - on the one end the expected outcome for a treatment level depends on the outcomes observed at all treatment levels
  - on the one end the expected outcome for a treatment level depends only on the outcomes observed at the focal treatment levels

## The bias-variance trade-off